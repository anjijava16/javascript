// Generated by CoffeeScript 1.9.1
var Customer, Person, exports,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Person = require('./Person');

Customer = (function(superClass) {
  extend(Customer, superClass);

  function Customer(name, type) {
    this.name = name;
    this.type = type;
    Customer.__super__.constructor.call(this, this.name);
  }

  Customer.prototype.order = function(item) {
    return console.log(this.type + " customer " + this.name + " orders " + item);
  };

  return Customer;

})(Person);

exports = module.exports = Customer;
